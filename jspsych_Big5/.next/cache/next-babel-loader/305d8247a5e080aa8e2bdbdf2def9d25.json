{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport Page from '../components/Page';\nimport AddComparison from '../components/AddComparison';\nimport Comparisons from '../components/Comparisons';\nimport LoadFile from '../components/LoadFile';\nimport repackResults from '../components/repack-results';\n\nvar _require = require('jcb64'),\n    unpack = _require.unpack;\n\nvar _require2 = require('@alheimsins/b5-result-text'),\n    getInfo = _require2.getInfo;\n\nvar FileSaver = require('file-saver');\n\nvar Compare =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Compare, _Component);\n\n  function Compare(props) {\n    var _this;\n\n    _classCallCheck(this, Compare);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Compare).call(this, props));\n    _this.state = {\n      comparisons: [],\n      scores: false,\n      language: 'en',\n      viewLanguage: 'en'\n    };\n    _this.addComparison = _this.addComparison.bind(_assertThisInitialized(_this));\n    _this.getWidth = _this.getWidth.bind(_assertThisInitialized(_this));\n    _this.handleTranslate = _this.handleTranslate.bind(_assertThisInitialized(_this));\n    _this.loadComparison = _this.loadComparison.bind(_assertThisInitialized(_this));\n    _this.loadResult = _this.loadResult.bind(_assertThisInitialized(_this));\n    _this.handleSaveComparison = _this.handleSaveComparison.bind(_assertThisInitialized(_this));\n    _this.updateScores = _this.updateScores.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Compare, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                document.addEventListener('DOMContentLoaded', this.getWidth(), false);\n                window.addEventListener('resize', this.getWidth.bind(this));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"addComparison\",\n    value: function addComparison(e) {\n      e.preventDefault();\n      var id = false;\n      var nameField = document.getElementById('comparisonName');\n      var compressedDataField = document.getElementById('comparisonData');\n\n      if (compressedDataField.value.startsWith('http')) {\n        var url = new URL(compressedDataField.value);\n        var params = new URLSearchParams(url.search.replace('?', ''));\n        id = params.get('id');\n      } else {\n        id = compressedDataField.value;\n      }\n\n      var data = unpack(id);\n      this.updateScores({\n        name: nameField.value,\n        data: data\n      });\n      nameField.value = '';\n      compressedDataField.value = '';\n    }\n  }, {\n    key: \"updateScores\",\n    value: function updateScores(data) {\n      var comparisons = this.state.comparisons;\n      comparisons.push(data);\n      var language = this.state.viewLanguage;\n      var scores = repackResults(comparisons, language);\n      this.setState({\n        comparisons: comparisons,\n        scores: scores\n      });\n    }\n  }, {\n    key: \"loadResult\",\n    value: function loadResult(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var reader = new window.FileReader();\n      var files = e.target.files;\n      var fileField = e.target;\n      var nameField = document.getElementById('comparisonName');\n\n      reader.onload = function () {\n        var text = reader.result;\n        var data = JSON.parse(text);\n\n        _this2.updateScores({\n          name: nameField.value,\n          data: data\n        });\n\n        nameField.value = '';\n        fileField.value = '';\n      };\n\n      if (files.length === 1) {\n        reader.readAsText(files[0]);\n      }\n    }\n  }, {\n    key: \"handleSaveComparison\",\n    value: function handleSaveComparison(e) {\n      e.preventDefault();\n      var comparisons = this.state.comparisons;\n      var file = new window.File([_JSON$stringify(comparisons, null, 2)], 'b5-comparison.json', {\n        type: 'text/json;charset=utf-8'\n      });\n      FileSaver.saveAs(file);\n    }\n  }, {\n    key: \"loadComparison\",\n    value: function loadComparison(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      var reader = new window.FileReader();\n      var files = e.target.files;\n\n      reader.onload = function () {\n        var text = reader.result;\n        var json = JSON.parse(text);\n        var language = _this3.state.viewLanguage;\n        var scores = repackResults(json, language);\n\n        _this3.setState({\n          comparisons: json,\n          scores: scores\n        });\n      };\n\n      if (files.length === 1) {\n        reader.readAsText(files[0]);\n      }\n    }\n  }, {\n    key: \"handleTranslate\",\n    value: function handleTranslate(e) {\n      e.preventDefault();\n      var language = e.target.dataset.language;\n      var comparisons = this.state.comparisons;\n      var scores = repackResults(comparisons, language);\n      this.setState({\n        scores: scores,\n        viewLanguage: language\n      });\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      var width = document.documentElement.clientWidth * 0.9;\n      this.setState({\n        chartWidth: width >= 500 ? width : 500\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(Page, null, __jsx(\"h1\", {\n        className: \"jsx-2393900586\" + \" \" + 'no-print'\n      }, \"Big five comparison\"), getInfo().languages.map(function (lang, index) {\n        return __jsx(\"button\", {\n          \"data-language\": lang,\n          onClick: _this4.handleTranslate,\n          key: index,\n          className: \"jsx-2393900586\" + \" \" + ((lang === _this4.state.viewLanguage ? 'isActive no-print' : 'no-print') || \"\")\n        }, lang);\n      }), __jsx(AddComparison, {\n        addComparison: this.addComparison\n      }), __jsx(LoadFile, {\n        handler: this.loadResult,\n        buttonTitle: \"Load result\"\n      }), this.state.scores ? __jsx(Comparisons, {\n        data: this.state.scores,\n        chartWidth: this.state.chartWidth\n      }) : null, this.state.comparisons.length > 0 ? __jsx(\"button\", {\n        onClick: this.handleSaveComparison,\n        className: \"jsx-2393900586\"\n      }, \"Save comparison\") : null, this.state.comparisons.length === 0 ? __jsx(LoadFile, {\n        handler: this.loadComparison,\n        buttonTitle: \"Load comparison\"\n      }) : null, __jsx(_JSXStyle, {\n        id: \"2393900586\"\n      }, [\"button.jsx-2393900586{background-color:white;border-radius:2px;color:black;padding:15px 32px;text-align:center;-webkit-text-decoration:none;text-decoration:none;display:inline-block;font-size:16px;width:200px;margin:10px;cursor:pointer;}\", \"button.jsx-2393900586:focus{outline:0;}\", \"button.jsx-2393900586:active{outline:0;}\", \".isActive.jsx-2393900586{background:yellow;}\", \"@media print{.no-print.jsx-2393900586,.no-print.jsx-2393900586 *.jsx-2393900586{display:none !important;}}\"]));\n    }\n  }]);\n\n  return Compare;\n}(Component);\n\nexport { Compare as default };","map":null,"metadata":{},"sourceType":"module"}