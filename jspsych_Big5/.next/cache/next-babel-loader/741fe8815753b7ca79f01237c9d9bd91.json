{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\n\nconst calculateScore = require('@alheimsins/bigfive-calculate-score');\n\nconst {\n  getDomain,\n  getFacet\n} = require('@alheimsins/b5-result-text');\n\nfunction unwrapFacets(data) {\n  const results = [];\n\n  _Object$keys(data).forEach(facetKey => {\n    results.push({\n      id: facetKey,\n      title: data[facetKey].title,\n      description: data[facetKey].description,\n      scores: data[facetKey].scores\n    });\n  });\n\n  return results;\n}\n\nexport default ((data, language) => {\n  const results = [];\n  const scores = data.map(item => {\n    return {\n      name: item.name,\n      scores: calculateScore({\n        answers: item.data.answers\n      })\n    };\n  });\n  const repacked = scores.reduce((prev, current) => {\n    const person = current.name;\n\n    _Object$keys(current.scores).forEach(domainKey => {\n      if (!_Object$keys(prev).includes(domainKey)) {\n        const domain = getDomain({\n          language: language,\n          domain: domainKey\n        });\n        prev[domainKey] = {\n          scores: [],\n          facet: {},\n          description: domain.shortDescription,\n          title: domain.title\n        };\n      }\n\n      prev[domainKey].scores.push({\n        title: person,\n        score: current.scores[domainKey].score\n      });\n\n      _Object$keys(current.scores[domainKey].facet).forEach(facetKey => {\n        if (!_Object$keys(prev[domainKey].facet).includes(facetKey)) {\n          const facet = getFacet({\n            language: language,\n            domain: domainKey,\n            facet: facetKey\n          });\n          prev[domainKey].facet[facetKey] = {\n            scores: [],\n            description: facet.text,\n            title: facet.title\n          };\n        }\n\n        prev[domainKey].facet[facetKey].scores.push({\n          title: person,\n          score: current.scores[domainKey].facet[facetKey].score\n        });\n      });\n    });\n\n    return prev;\n  }, {});\n\n  _Object$keys(repacked).forEach(domainKey => {\n    results.push({\n      id: domainKey,\n      title: repacked[domainKey].title,\n      scores: repacked[domainKey].scores,\n      description: repacked[domainKey].description,\n      facets: unwrapFacets(repacked[domainKey].facet)\n    });\n  });\n\n  return results;\n});","map":null,"metadata":{},"sourceType":"module"}