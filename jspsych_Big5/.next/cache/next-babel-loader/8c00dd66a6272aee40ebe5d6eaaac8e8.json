{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport Page from '../components/Page';\nimport Item from '../components/Item';\nimport Intro from '../components/Intro';\n\nconst {\n  getItems,\n  getInfo\n} = require('@alheimsins/b5-johnson-120-ipip-neo-pi-r');\n\nconst {\n  pack\n} = require('jcb64');\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: {},\n      items: false,\n      intro: false,\n      language: 'en'\n    };\n    this.setLanguage = this.setLanguage.bind(this);\n    this.startTest = this.startTest.bind(this);\n    this.setAnswer = this.setAnswer.bind(this);\n    this.handleDoSubmit = this.handleDoSubmit.bind(this);\n  }\n\n  startTest() {\n    const language = this.state.language;\n    const items = getItems(language, true);\n    items.reverse();\n    this.setState({\n      items: items,\n      nowShowing: 0,\n      intro: true\n    });\n  }\n\n  setLanguage(e) {\n    e.preventDefault();\n    const language = e.target.dataset.language;\n    this.setState({\n      language: language\n    });\n  }\n\n  setAnswer(e) {\n    e.preventDefault();\n    const answers = this.state.answers;\n    let nowShowing = this.state.nowShowing;\n\n    const nextShowing = _parseInt(e.target.dataset.num, 10);\n\n    if (nextShowing > nowShowing) {\n      nowShowing = nextShowing;\n    }\n\n    answers[e.target.dataset.qid] = {\n      domain: e.target.dataset.domain,\n      facet: e.target.dataset.facet,\n      score: e.target.dataset.score\n    };\n    this.setState({\n      answers: answers,\n      nowShowing: nowShowing\n    });\n  }\n\n  handleDoSubmit(e) {\n    const answers = this.state.answers;\n    const language = this.state.language;\n\n    const choices = _Object$keys(answers).reduce((prev, current) => {\n      const choice = answers[current];\n      prev.push({\n        domain: choice.domain,\n        facet: choice.facet,\n        score: choice.score\n      });\n      return prev;\n    }, []);\n\n    const result = {\n      language: language,\n      answers: choices\n    };\n    const b64 = pack(result);\n    window.location = `/result?id=${b64}`;\n  }\n\n  render() {\n    return __jsx(Page, null, __jsx(\"h1\", {\n      className: \"jsx-2507319245\"\n    }, \"Big Five Test\"), this.state.intro === false ? __jsx(Intro, {\n      selectedLanguage: this.state.language,\n      info: getInfo(),\n      setLanguage: this.setLanguage,\n      startTest: this.startTest\n    }) : null, this.state.items !== false && this.state.nowShowing === this.state.items.length ? __jsx(\"button\", {\n      onClick: this.handleDoSubmit,\n      className: \"jsx-2507319245\"\n    }, \"Submit\") : null, this.state.items !== false ? this.state.items.map(item => _parseInt(item.num, 10) <= this.state.nowShowing + 1 ? __jsx(Item, {\n      data: item,\n      answers: this.state.answers,\n      setAnswer: this.setAnswer,\n      key: item.id\n    }) : null) : null, __jsx(_JSXStyle, {\n      id: \"2507319245\"\n    }, [\"h2.jsx-2507319245{color:red;font-size:48px;text-align:center;}\", \"a.jsx-2507319245,a.jsx-2507319245:visited{color:white;}\", \"button.jsx-2507319245{background-color:white;border-radius:2px;color:black;padding:15px 32px;text-align:center;-webkit-text-decoration:none;text-decoration:none;display:inline-block;font-size:16px;width:200px;margin:10px;cursor:pointer;}\", \"button.jsx-2507319245:focus{outline:0;}\", \"button.jsx-2507319245:active{outline:0;}\"]));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}