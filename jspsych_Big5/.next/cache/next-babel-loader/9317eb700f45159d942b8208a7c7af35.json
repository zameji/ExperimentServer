{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport Page from '../components/Page';\nimport Resume from '../components/Resume';\nimport AddResults from '../components/AddResults';\nimport LoadFile from '../components/LoadFile';\n\nvar _require = require('jcb64'),\n    unpack = _require.unpack;\n\nvar calculateScore = require('@alheimsins/bigfive-calculate-score');\n\nvar getResult = require('@alheimsins/b5-result-text');\n\nvar _require2 = require('@alheimsins/b5-result-text'),\n    getInfo = _require2.getInfo;\n\nvar FileSaver = require('file-saver');\n\nvar Result =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Result, _Component);\n\n  function Result(props) {\n    var _this;\n\n    _classCallCheck(this, Result);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Result).call(this, props));\n    _this.state = {\n      b64: false,\n      scores: false,\n      resume: false,\n      results: false,\n      language: 'en',\n      viewLanguage: 'en',\n      chartWidth: 600\n    };\n    _this.addResults = _this.addResults.bind(_assertThisInitialized(_this));\n    _this.getWidth = _this.getWidth.bind(_assertThisInitialized(_this));\n    _this.loadResults = _this.loadResults.bind(_assertThisInitialized(_this));\n    _this.handleSaveResults = _this.handleSaveResults.bind(_assertThisInitialized(_this));\n    _this.handleTranslateResume = _this.handleTranslateResume.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Result, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var params, queryId, b64, results, scores, info, language, resume;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = new URLSearchParams(window.location.search.replace('?', ''));\n                queryId = params.get('id');\n\n                if (queryId) {\n                  b64 = queryId;\n                  results = unpack(b64);\n                  scores = calculateScore({\n                    answers: results.answers\n                  });\n                  info = getInfo();\n                  language = this.state.language;\n\n                  if (info.languages.includes(results.language)) {\n                    language = results.language;\n                  }\n\n                  resume = getResult({\n                    scores: scores,\n                    lang: language\n                  });\n                  this.setState({\n                    b64: b64,\n                    scores: scores,\n                    resume: resume,\n                    language: results.language,\n                    viewLanguage: language,\n                    results: results\n                  });\n                }\n\n                document.addEventListener('DOMContentLoaded', this.getWidth(), false);\n                window.addEventListener('resize', this.getWidth.bind(this));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      var width = document.documentElement.clientWidth * 0.9;\n      this.setState({\n        chartWidth: width >= 500 ? width : 500\n      });\n    }\n  }, {\n    key: \"addResults\",\n    value: function addResults(e) {\n      e.preventDefault();\n      var b64 = false;\n      var compressedDataField = document.getElementById('resultData');\n\n      if (compressedDataField.value.startsWith('http')) {\n        var url = new URL(compressedDataField.value);\n        var params = new URLSearchParams(url.search.replace('?', ''));\n        b64 = params.get('id');\n      } else {\n        b64 = compressedDataField.value;\n      }\n\n      var results = unpack(b64);\n      var scores = calculateScore({\n        answers: results.answers\n      });\n      var info = getInfo();\n      var language = this.state.language;\n\n      if (info.languages.includes(results.language)) {\n        language = results.language;\n      }\n\n      var resume = getResult({\n        scores: scores,\n        lang: language\n      });\n      this.setState({\n        b64: b64,\n        scores: scores,\n        resume: resume,\n        language: results.language,\n        viewLanguage: language,\n        results: results\n      });\n      compressedDataField.value = '';\n    }\n  }, {\n    key: \"loadResults\",\n    value: function loadResults(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var reader = new window.FileReader();\n      var files = e.target.files;\n\n      reader.onload = function () {\n        var text = reader.result;\n        var results = JSON.parse(text);\n        var scores = calculateScore({\n          answers: results.answers\n        });\n        var info = getInfo();\n        var language = _this2.state.language;\n\n        if (info.languages.includes(results.language)) {\n          language = results.language;\n        }\n\n        var resume = getResult({\n          scores: scores,\n          lang: language\n        });\n\n        _this2.setState({\n          scores: scores,\n          resume: resume,\n          language: results.language,\n          viewLanguage: language,\n          results: results\n        });\n      };\n\n      if (files.length === 1) {\n        reader.readAsText(files[0]);\n      }\n    }\n  }, {\n    key: \"handleSaveResults\",\n    value: function handleSaveResults(e) {\n      e.preventDefault();\n      var results = this.state.results;\n      var file = new window.File([_JSON$stringify(results, null, 2)], 'b5-results.json', {\n        type: 'text/json;charset=utf-8'\n      });\n      FileSaver.saveAs(file);\n    }\n  }, {\n    key: \"handleTranslateResume\",\n    value: function handleTranslateResume(e) {\n      e.preventDefault();\n      var language = e.target.dataset.language;\n      var scores = this.state.scores;\n      var resume = getResult({\n        scores: scores,\n        lang: language\n      });\n      this.setState({\n        resume: resume,\n        viewLanguage: language\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(Page, null, __jsx(\"h1\", {\n        className: \"jsx-3414253364\"\n      }, \"Big Five Result\"), getInfo().languages.map(function (lang, index) {\n        return __jsx(\"button\", {\n          \"data-language\": lang,\n          onClick: _this3.handleTranslateResume,\n          key: index,\n          className: \"jsx-3414253364\" + \" \" + ((lang === _this3.state.viewLanguage ? 'isActive' : '') || \"\")\n        }, lang);\n      }), this.state.resume === false ? __jsx(AddResults, {\n        addResults: this.addResults\n      }) : null, this.state.resume === false ? __jsx(LoadFile, {\n        handler: this.loadResults,\n        buttonTitle: \"Upload\"\n      }) : null, this.state.resume !== false ? __jsx(Resume, {\n        data: this.state.resume,\n        width: this.state.chartWidth\n      }) : null, this.state.resume !== false ? __jsx(\"button\", {\n        onClick: this.handleSaveResults,\n        className: \"jsx-3414253364\"\n      }, \"Save results\") : null, __jsx(_JSXStyle, {\n        id: \"3414253364\"\n      }, [\"h2.jsx-3414253364{color:red;font-size:48px;text-align:center;}\", \"a.jsx-3414253364,a.jsx-3414253364:visited{color:white;}\", \"button.jsx-3414253364{background-color:white;border-radius:2px;color:black;padding:15px 32px;text-align:center;-webkit-text-decoration:none;text-decoration:none;display:inline-block;font-size:16px;width:200px;margin:10px;cursor:pointer;}\", \"button.jsx-3414253364:focus{outline:0;}\", \"button.jsx-3414253364:active{outline:0;}\", \".isActive.jsx-3414253364{background:yellow;}\"]));\n    }\n  }]);\n\n  return Result;\n}(Component);\n\nexport { Result as default };","map":null,"metadata":{},"sourceType":"module"}